{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// This file is automatically compiled by Webpack, along with any other files\n// present in this directory. You're encouraged to place your actual application logic in\n// a relevant structure within app/javascript and only use these pack files to reference\n// that code so it'll be compiled.\n//= require jquery3\n//= require popper\n//= require bootstrap-sprockets\nimport Rails from \"@rails/ujs\";\nimport Turbolinks from \"turbolinks\";\nimport * as ActiveStorage from \"@rails/activestorage\";\nimport \"channels\";\nRails.start();\nTurbolinks.start();\nActiveStorage.start();\n\nvar Comment = /*#__PURE__*/function (_HTMLElement) {\n  _inherits(Comment, _HTMLElement);\n\n  var _super = _createSuper(Comment);\n\n  function Comment() {\n    _classCallCheck(this, Comment);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Comment, [{\n    key: \"author\",\n    get: // A getter/setter for an open property.\n    function get() {\n      return this.hasAttribute('author');\n    },\n    set: function set(val) {\n      // Reflect the value of the open property as an HTML attribute.\n      if (val) {\n        this.setAttribute('author', '');\n      } else {\n        this.removeAttribute('author');\n      }\n\n      this.toggleDrawer();\n    }\n  }]);\n\n  return Comment;\n}( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\n\ncustomElements.define('user-comment', Comment);","map":{"version":3,"sources":["/Users/andreamccormick/Documents/GitHub/Iteration-1/owledge/app/javascript/packs/application.js"],"names":["Rails","Turbolinks","ActiveStorage","start","Comment","hasAttribute","val","setAttribute","removeAttribute","toggleDrawer","HTMLElement","customElements","define"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,aAAZ,MAA+B,sBAA/B;AACA,OAAO,UAAP;AAEAF,KAAK,CAACG,KAAN;AACAF,UAAU,CAACE,KAAX;AACAD,aAAa,CAACC,KAAd;;IAEMC,O;;;;;;;;;;;;;SACF;AACA,mBAAa;AACT,aAAO,KAAKC,YAAL,CAAkB,QAAlB,CAAP;AACH,K;SAED,aAAWC,GAAX,EAAgB;AACZ;AACA,UAAIA,GAAJ,EAAS;AACL,aAAKC,YAAL,CAAkB,QAAlB,EAA4B,EAA5B;AACH,OAFD,MAEO;AACH,aAAKC,eAAL,CAAqB,QAArB;AACH;;AACD,WAAKC,YAAL;AACH;;;;iCAdiBC,W;;AAgBtBC,cAAc,CAACC,MAAf,CAAsB,cAAtB,EAAsCR,OAAtC","sourcesContent":["// This file is automatically compiled by Webpack, along with any other files\n// present in this directory. You're encouraged to place your actual application logic in\n// a relevant structure within app/javascript and only use these pack files to reference\n// that code so it'll be compiled.\n\n//= require jquery3\n//= require popper\n//= require bootstrap-sprockets\n\nimport Rails from \"@rails/ujs\"\nimport Turbolinks from \"turbolinks\"\nimport * as ActiveStorage from \"@rails/activestorage\"\nimport \"channels\"\n\nRails.start()\nTurbolinks.start()\nActiveStorage.start()\n\nclass Comment extends HTMLElement {\n    // A getter/setter for an open property.\n    get author() {\n        return this.hasAttribute('author');\n    }\n\n    set author(val) {\n        // Reflect the value of the open property as an HTML attribute.\n        if (val) {\n            this.setAttribute('author', '');\n        } else {\n            this.removeAttribute('author');\n        }\n        this.toggleDrawer();\n    }\n}\ncustomElements.define('user-comment', Comment);"]},"metadata":{},"sourceType":"module"}